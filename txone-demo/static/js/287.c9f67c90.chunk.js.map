{"version":3,"file":"static/js/287.c9f67c90.chunk.js","mappings":"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","sources":["webpack://txone-demo/./src/components/MenuButton/MenuButton.module.scss?5878","webpack://txone-demo/./src/components/MenuButton/MenuButton.tsx","webpack://txone-demo/./src/components/MenuButton/index.tsx","webpack://txone-demo/./src/pages/Demo/TableDemo.tsx","webpack://txone-demo/./src/pages/Demo/Demo.module.scss?86a9","webpack://txone-demo/./src/pages/Demo/index.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"shMTRmj8mGU1wFGtue1L\",\"menu\":\"ZuC9OyXtj8XBIT_eACHv\",\"item\":\"WWEOTWaIs_PHeOeRoj_c\",\"icon\":\"XzCRovJCh5_jOS9UE8pA\"};","import React from 'react'\nimport { Menu, MenuToggle, Icon, MenuList, MenuItem } from '@tonic-ui/react'\nimport styled from './MenuButton.module.scss'\n\ntype MenuButtonProps = {\n  style?: React.CSSProperties\n  toggleIcon?: React.ReactElement\n} & ReactProps.WithChildren\n\nconst MenuButton = (props: MenuButtonProps) => {\n  return (\n    <Menu offset={[, 4]} className={styled.wrapper} style={props.style}>\n      <MenuToggle variant='secondary' className={styled.icon}>\n        {props.toggleIcon ? props.toggleIcon : <Icon icon='user-team' mr='2x' />}\n      </MenuToggle>\n      <MenuList\n        width='max-content'\n        className={styled.menu}\n        PopperProps={{\n          usePortal: true,\n          modifiers: [\n            {\n              name: 'flip',\n              enabled: true,\n            },\n          ],\n        }}\n      >\n        {React.Children.map(props.children, (child) => {\n          if (!React.isValidElement(child)) return\n          if (child.type === MenuItem) {\n            return React.cloneElement(child as React.ReactElement, {\n              className: styled.item,\n            })\n          }\n          return child\n        })}\n      </MenuList>\n    </Menu>\n  )\n}\n\nexport default MenuButton\n","import MenuButtonBase from './MenuButton'\nimport { MenuItem } from '@tonic-ui/react'\n\nconst MenuButton = Object.assign(MenuButtonBase, {\n  Item: MenuItem,\n})\n\nexport default MenuButton\n","import React, { useMemo } from 'react'\nimport { flexRender, getCoreRowModel, useReactTable } from '@tanstack/react-table'\nimport {\n  Table,\n  TableHeader,\n  TableHeaderRow,\n  TableHeaderCell,\n  TableBody,\n  TableRow,\n  TableCell,\n  Truncate,\n  useColorMode,\n  Icon,\n  Text,\n} from '@tonic-ui/react'\nimport MenuButton from 'components/MenuButton'\n\nconst data = [\n  { id: 1, eventType: 'Virus/Malware', affectedDevices: 20, detections: 634 },\n  { id: 2, eventType: 'Spyware/Grayware', affectedDevices: 20, detections: 634 },\n  { id: 3, eventType: 'URL Filtering', affectedDevices: 15, detections: 598 },\n  { id: 4, eventType: 'Web Reputation', affectedDevices: 15, detections: 598 },\n  { id: 5, eventType: 'Network Virus', affectedDevices: 15, detections: 497 },\n  { id: 6, eventType: 'Application Control', affectedDevices: 0, detections: 0 },\n]\n\nconst TableDemo = () => {\n  const [colorMode] = useColorMode()\n  const hoverBackgroundColor = {\n    dark: 'rgba(255, 255, 255, 0.12)',\n    light: 'rgba(0, 0, 0, 0.12)',\n  }[colorMode]\n\n  const columns = useMemo(\n    () => [\n      {\n        header: 'Event Type',\n        accessorKey: 'eventType',\n        size: 110,\n      },\n      {\n        header: 'Affected Devices',\n        accessorKey: 'affectedDevices',\n        size: 110,\n        style: {\n          textAlign: 'right',\n        },\n      },\n      {\n        header: 'Detections',\n        accessorKey: 'detections',\n        size: 110,\n        style: {\n          textAlign: 'right',\n        },\n      },\n      {\n        header: 'Action',\n        accessorKey: 'action',\n        size: 20,\n        style: {\n          textAlign: 'right',\n        },\n      },\n    ],\n    []\n  )\n\n  const table = useReactTable({\n    data,\n    columns,\n    defaultColumn: {\n      minSize: 40,\n    },\n    getCoreRowModel: getCoreRowModel(),\n  })\n\n  const layout = 'flexbox' // One of: 'flexbox', 'table'\n\n  return (\n    <Table layout={layout} sx={{ overflowX: 'scroll' }}>\n      <TableHeader>\n        {table.getHeaderGroups().map((headerGroup) => (\n          <TableHeaderRow key={headerGroup.id}>\n            {headerGroup.headers.map((header) => {\n              const styleProps = {\n                minWidth: header.column.columnDef.minSize,\n                width: header.getSize(),\n                ...header.column.columnDef,\n              }\n              return (\n                <TableHeaderCell key={header.id} {...styleProps}>\n                  {header.isPlaceholder ? null : (\n                    <Truncate>{flexRender(header.column.columnDef.header, header.getContext())}</Truncate>\n                  )}\n                </TableHeaderCell>\n              )\n            })}\n          </TableHeaderRow>\n        ))}\n      </TableHeader>\n      <TableBody>\n        {table.getRowModel().rows.map((row) => (\n          <TableRow\n            key={row.id}\n            _hover={{\n              backgroundColor: hoverBackgroundColor,\n            }}\n          >\n            {row.getVisibleCells().map((cell) => {\n              const styleProps = {\n                minWidth: cell.column.columnDef.minSize,\n                width: cell.column.getSize(),\n                ...cell.column.columnDef,\n              }\n              return (\n                <TableCell key={cell.id} {...styleProps}>\n                  <Truncate>\n                    {cell.column.id !== 'action' ? (\n                      flexRender(cell.column.columnDef.cell, cell.getContext())\n                    ) : (\n                      <MenuButton>\n                        <MenuButton.Item>\n                          <Icon icon='settings' mr='2x' />\n                          <Text>Settings</Text>\n                        </MenuButton.Item>\n                        <MenuButton.Item>\n                          <Icon icon='user-team' mr='2x' />\n                          <Text>Accounts</Text>\n                        </MenuButton.Item>\n                        <MenuButton.Item>\n                          <Icon icon='lock' mr='2x' />\n                          <Text>Privacy control</Text>\n                        </MenuButton.Item>\n                      </MenuButton>\n                    )}\n                  </Truncate>\n                </TableCell>\n              )\n            })}\n          </TableRow>\n        ))}\n      </TableBody>\n    </Table>\n  )\n}\n\nexport default TableDemo\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"F2vyhL8HAI4Rhilw0rY9\",\"square\":\"yoRTb_H9AG0S72vwS84I\"};","import React from 'react'\nimport { Text, Icon } from '@tonic-ui/react'\nimport MenuButton from 'components/MenuButton'\nimport TableDemo from './TableDemo'\nimport styled from './Demo.module.scss'\n\nconst Demo = () => {\n  return (\n    <div className={styled.wrapper}>\n      <div className={styled.square}>\n        <MenuButton toggleIcon={<Icon data-testid='face-smile-1' icon='face-smile-o' size='8x' color='yellow:50' />}>\n          <MenuButton.Item>\n            <Icon icon='settings' mr='2x' />\n            <Text>Settings</Text>\n          </MenuButton.Item>\n          <MenuButton.Item>\n            <Icon icon='user-team' mr='2x' />\n            <Text>Accounts</Text>\n          </MenuButton.Item>\n          <MenuButton.Item>\n            <Icon icon='lock' mr='2x' />\n            <Text>Privacy control</Text>\n          </MenuButton.Item>\n        </MenuButton>\n      </div>\n      <div className={styled.square}>\n        <MenuButton style={{ position: 'absolute', right: 0, bottom: 0 }}>\n          <MenuButton.Item>\n            <Icon icon='settings' mr='2x' />\n            <Text>Settings</Text>\n          </MenuButton.Item>\n          <MenuButton.Item>\n            <Icon icon='user-team' mr='2x' />\n            <Text>Accounts</Text>\n          </MenuButton.Item>\n          <MenuButton.Item>\n            <Icon icon='lock' mr='2x' />\n            <Text>Privacy control</Text>\n          </MenuButton.Item>\n        </MenuButton>\n      </div>\n      <div className={styled.square}>\n        <TableDemo />\n      </div>\n      <div className={styled.square}>\n        <MenuButton>\n          <MenuButton.Item>\n            <Icon icon='settings' mr='2x' />\n            <Text>Settings</Text>\n          </MenuButton.Item>\n          <MenuButton.Item>\n            <Icon icon='user-team' mr='2x' />\n            <Text>Accounts</Text>\n          </MenuButton.Item>\n          <MenuButton.Item>\n            <Icon icon='lock' mr='2x' />\n            <Text>Privacy control</Text>\n          </MenuButton.Item>\n        </MenuButton>\n      </div>\n      <MenuButton\n        toggleIcon={<Icon data-testid='face-smile-2' icon='face-smile-o' size='8x' color='yellow:50' />}\n        style={{ position: 'absolute', right: '3px', bottom: '10px' }}\n      >\n        <MenuButton.Item>\n          <Icon icon='settings' mr='2x' />\n          <Text>Settings</Text>\n        </MenuButton.Item>\n        <MenuButton.Item>\n          <Icon icon='user-team' mr='2x' />\n          <Text>Accounts</Text>\n        </MenuButton.Item>\n        <MenuButton.Item>\n          <Icon icon='lock' mr='2x' />\n          <Text>Privacy control</Text>\n        </MenuButton.Item>\n      </MenuButton>\n    </div>\n  )\n}\n\nexport default Demo\n"],"names":["props","_jsxs","Menu","offset","className","styled","style","children","_jsx","MenuToggle","variant","toggleIcon","Icon","icon","mr","MenuList","width","PopperProps","usePortal","modifiers","name","enabled","React","map","child","type","MenuItem","Object","assign","MenuButtonBase","Item","data","id","eventType","affectedDevices","detections","hoverBackgroundColor","dark","light","_slicedToArray","useColorMode","columns","useMemo","header","accessorKey","size","textAlign","table","useReactTable","defaultColumn","minSize","getCoreRowModel","Table","layout","sx","overflowX","TableHeader","getHeaderGroups","headerGroup","TableHeaderRow","headers","styleProps","_objectSpread","minWidth","column","columnDef","getSize","TableHeaderCell","isPlaceholder","Truncate","flexRender","getContext","TableBody","getRowModel","rows","row","TableRow","_hover","backgroundColor","getVisibleCells","cell","TableCell","MenuButton","Text","color","position","right","bottom","TableDemo"],"sourceRoot":""}